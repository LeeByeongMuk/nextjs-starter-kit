services:
  next-js:
    build:
      dockerfile: docker/next/Dockerfile
      context: .
    volumes:
      - '.:/var/www'
      - '/var/www/node_modules'
    ports:
      - '${APP_PORT:-3000}:3000'
    networks:
      - next-js-kit

  express-js:
    build:
      dockerfile: docker/express/Dockerfile
      context: .
    volumes:
      - '.:/var/www'
      - '/var/www/node_modules'
    ports:
      - '${APP_API_PORT:-80}:80'
    networks:
      - next-js-kit
    depends_on:
      - mysql
      - shadow-mysql

  mysql:
    image: 'mysql/mysql-server:8.0'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-password}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE:-app-db}'
      MYSQL_USER: '${DB_USERNAME:-username}'
      MYSQL_PASSWORD: '${DB_PASSWORD:-password}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    # todo : healthcheck
    ports:
      - '${DB_PORT:-3306}:3306'
    networks:
      - next-js-kit

  shadow-mysql:
    image: 'mysql/mysql-server:8.0'
    environment:
      MYSQL_ROOT_PASSWORD: '${SHADOW_DB_PASSWORD:-password}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${SHADOW_DB_DATABASE:-app-db}'
      MYSQL_USER: '${SHADOW_DB_USERNAME:-username}'
      MYSQL_PASSWORD: '${SHADOW_DB_PASSWORD:-password}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ports:
      - '${SHADOW_DB_PORT:-3307}:3306'
    networks:
      - next-js-kit

networks:
  next-js-kit:
    driver: bridge
